function refreshForm(innerHTML) {
  const newAddressForm = document.querySelector('#address-form-body');
  newAddressForm.innerHTML = innerHTML;
  console.log("refresh");
}

function removeAddress() {
  const lastAddress = document.querySelector('.addresses .new-address .card-addresses');
  lastAddress.remove();
  console.log("remove");
}

function addAddress(addressHTML) {
  const addresses = document.querySelector('.addresses .new-address');
  addresses.insertAdjacentHTML('beforeend', addressHTML);
  console.log("add");
}


function closeForm() {
 document.getElementById('close-address').click();
 console.log("close");
}

function autocomplete() {
  const flatAddresses = document.querySelectorAll('.autocomplete');
  if (flatAddresses.length > 0) {
    flatAddresses.forEach((flatAddress) => {
      const autocomplete = new google.maps.places.Autocomplete(flatAddress, { types: [ 'geocode' ] });
      google.maps.event.addDomListener(flatAddress, 'keydown', function(e) {
        if (e.key === "Enter") {
          e.preventDefault(); // Do not submit the form on Enter.
        }
      });
    });
  }
}

function searchFav() {
  const addressElement = document.querySelector('#card-address [data-address]');
  // console.log(addressElement)
  const searchBar = document.querySelector('.edit_spot_search');
  // console.log(searchBar)
  const input = document.querySelector('#spot_search_search_address');
  // console.log(input)
  // console.log(addressElement.dataset.address)
  if (addressElement) {
    addressElement.addEventListener('click', (event) => {
      input.value = addressElement.dataset.address;
      // console.log(input.value)
      searchBar.submit();
    });
  }
  console.log("searchfav");
};

removeAddress();

closeForm();
refreshForm('<%= j render "spot_searches/form", address: Address.new %>');
autocomplete();
searchFav();
<% if @last_address %>
  addAddress('<%= j render "spot_searches/address", address: @last_address %>');
<% end %>

